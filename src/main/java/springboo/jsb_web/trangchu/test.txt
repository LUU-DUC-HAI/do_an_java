package springboo.jsb_web.trangchu;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import jakarta.servlet.http.HttpSession;
import springboo.jsb_web.sanpham.DvlSanPham;
import springboo.jsb_web.sanpham.SanPham;

@Controller
@RequestMapping("/giohang")
public class QdlGioHang {
    
    @Autowired
    private HttpSession session;

    @Autowired
    private DvlSanPham dvlSanPham;

    @GetMapping("/ajax/get-html")
    public String getGioHangAjax(Model model) {
        if (!gioHangCoSanPham()) {
            return "trangchu/giohang-trong";
        }

        Map<Integer, Integer> cartMap = getCartFromSession();
        List<Map<String, String>> cartData = getCartData(cartMap);

        model.addAttribute("cartData", cartData);
        model.addAttribute("tongGiaTriGioHang", tongGiaTriGioHang());
        model.addAttribute("tongGiaTriGioHangVi", tongGiaTriGioHangVi());
        return "trangchu/giohang";
    }

    @PostMapping(path = "/them/ajax", produces = MediaType.APPLICATION_JSON_VALUE)
    public ResponseEntity<Object> postGioHangThemMoi(
            @RequestParam("id_sanpham") int id,
            @RequestParam("soluong") int soluong,
            @RequestParam("ten") String ten) {

        Map<Integer, Integer> cartMap = getCartFromSession();
        Integer cartQuantity = (Integer) session.getAttribute("SoSanPhamTrongGioHang");

        if (cartMap.containsKey(id)) {
            cartMap.put(id, cartMap.get(id) + soluong);
        } else {
            cartMap.put(id, soluong);
        }
        cartQuantity += soluong;

        session.setAttribute("cart", cartMap);
        session.setAttribute("SoSanPhamTrongGioHang", cartQuantity);

        Map<String, Object> data = new HashMap<>();
        data.put("success", "Đã thêm thành công vào giỏ hàng sản phẩm " + ten);
        data.put("total", demSanPhamTrongGioHang());
        return new ResponseEntity<>(data, HttpStatus.OK);
    }

    private int demSanPhamTrongGioHang() {
        Map<Integer, Integer> cartMap = getCartFromSession();

        if (cartMap == null || cartMap.isEmpty())
            return 0;

        int tongSoSanPham = 0;
        for (Integer maSanPham : cartMap.keySet()) {
            tongSoSanPham += cartMap.get(maSanPham);
        }

        return tongSoSanPham;
    }

    private boolean gioHangCoSanPham() {
        Map<Integer, Integer> cartMap = getCartFromSession();

        if (cartMap == null || cartMap.isEmpty())
            return false;

        return true;
    }

    private String tongGiaTriGioHangVi() {
        return String.format("%,.0f", tongGiaTriGioHang());
    }

    private float tongGiaTriGioHang() {
        if (!gioHangCoSanPham())
            return 0;

        int tong = 0;
        Map<Integer, Integer> cartMap = getCartFromSession();

        for (Integer maSanPham : cartMap.keySet()) {
            SanPham sp = dvlSanPham.xem(maSanPham);
            int soluong = cartMap.get(maSanPham);
            tong += sp.getDonGia() * soluong;
        }

        return tong;
    }

    private Map<Integer, Integer> getCartFromSession() {
        Map<Integer, Integer> cartMap = (Map<Integer, Integer>) session.getAttribute("cart");
        if (cartMap == null) {
            cartMap = new HashMap<>();
            session.setAttribute("cart", cartMap);
            session.setAttribute("SoSanPhamTrongGioHang", 0);
        }
        return cartMap;
    }

    private List<Map<String, String>> getCartData(Map<Integer, Integer> cartMap) {
        List<Map<String, String>> cartData = new ArrayList<>();
        for (Integer maSanPham : cartMap.keySet()) {
            SanPham sp = dvlSanPham.xem(maSanPham);
            float thanhTien = cartMap.get(maSanPham) * sp.getDonGia();

            Map<String, String> map = new HashMap<>();
            map.put("id", String.valueOf(sp.getId()));
            map.put("ten", sp.getTen());
            map.put("donGia", String.valueOf(sp.getDonGia()));
            map.put("donGiaVi", String.format("%,.0f", sp.getDonGia()));
            map.put("anh", sp.getAnh());
            map.put("soluong", String.valueOf(cartMap.get(maSanPham)));
            map.put("thanhTien", String.format("%,.0f", thanhTien));

            cartData.add(map);
        }
        return cartData;
    }
}
